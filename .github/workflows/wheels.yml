name: Wheels

on:
  workflow_dispatch:

jobs:
  build-test:
    name: Build and Publish
    runs-on: ${{ matrix.os.instance }}
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        os:
          - category: windows
            platform: x64
            instance: windows-latest

          - category: ubuntu
            platform: x64
            instance: ubuntu-latest

          - category: macos
            platform: x64
            instance: macos-latest

        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Set Environment on macOS
        uses: maxim-lobanov/setup-xamarin@v1
        if: ${{ matrix.os.category == 'macos' }}
        with:
          mono-version: latest

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x"

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Build
        run: |
          uv build --wheel

      - name: Rename Linux wheel
        run: |
          uv run python -c "import glob,os;fn=glob.glob('./dist/*.whl')[0];newfn=fn.replace('linux_x86_64','manylinux_2_17_x86_64');os.rename(fn, newfn)"

      - name: Publish package distributions to PyPI
        run: |
          uv publish
